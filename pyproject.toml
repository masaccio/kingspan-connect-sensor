[project]
name = "kingspan-connect-sensor"
version = "3.2.0"
description = "API to get oil tank from Kingspan SENSiT sensors"
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = {text = "MIT"}
authors = [
  {name = "Jon Connell", email = "python@figsandfudge.com"}
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
]
dependencies = [
  "async-property>=0.2.1,<0.3.0",
  "asyncio>=3.4.3,<4.0.0",
  "datetime>=4.7,<5.0.0",
  "httpx>=0.28",
  "requests>=2.28.1,<3.0.0",
  "lxml>=5.3",
  "zeep>=4.2.0,<5.0.0",
  "xlsxwriter>=3.2.4",
]

[project.urls]
Documentation = "https://github.com/masaccio/kingspan-connect-sensor/blob/main/README.md"
Repository = "https://github.com/masaccio/kingspan-connect-sensor"

[project.scripts]
kingspan-export = "connectsensor._kingspan_export:main"
kingspan-notifier = "connectsensor._kingspan_notifier:main"
kingspan-status = "connectsensor._kingspan_status:main"

[dependency-groups]
dev = [
  "aiofiles>=22.1.0",
  "black>=22.10.0",
  "openpyxl>=3.0.10",
  "pandas>=2.2.2",
  "pytest>=7.1.0",
  "pytest-asyncio>=0.20.2",
  "pytest-console-scripts>=1.3.1",
  "pytest-cov>=3.0.0",
  "xlsxwriter>=3.0.3",
  "ruff>=0.7.1",
  "tox>=4.23.2",
  "mypy>=1.14.1",
  "pytest-mock>=3.14.0",
  "pytest-xdist<4.0.0,>=3.3.1"
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.coverage.run]
branch = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pytest.ini_options]
addopts = "-W ignore::DeprecationWarning -n logical --cov-report=html --cov-report=term-missing:skip-covered --cov=connectsensor"
minversion = 6.0
pythonpath = [".", "tests"]
testpaths = ["tests"]

[tool.tox]
requires = ["tox>=4.0"]
envlist = ["py310", "py311", "py312", "py313"]

[testenv]
deps = [
  "pytest",
  "pytest-console-scripts",
  "pytest-cov",
]
commands = [
  "pytest tests/ --import-mode importlib -n logical --no-cov"
]

[tool.ruff]
exclude = [
  "**/.tox/*",
  "**/.vscode/*",
]
fix = true
line-length = 100
lint.select = [ "ALL" ]
lint.unfixable = [
  "ERA", # do not autoremove commented out code
]
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.lint.pylint]
max-statements = 100
max-branches = 20

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["PLR2004", "S101", "D101", "D102", "D103", "ANN201", "ANN001"]
