[tool.poetry]
authors = ["Jon Connell <python@figsandfudge.com>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
]
description = "API to get oil tank from Kingspan SENSiT sensors"
documentation = "https://github.com/masaccio/kingspan-connect-sensor/blob/main/README.md"
license = "MIT"
name = "kingspan-connect-sensor"
packages = [{include = "connectsensor", from = "src"}]
readme = "README.md"
repository = "https://github.com/masaccio/kingspan-connect-sensor"
version = "2.0.6"

[tool.poetry.dependencies]
async-property = "^0.2.1"
asyncio = "^3.4.3"
datetime = "^4.7"
# homeassistant has a constraint on httpx==0.23.1
httpx = "^0.23.0"
# homeassistant has a constraint on pandas==1.4.3
pandas = "^1.4.3"
python = "^3.9"
requests = "^2.28.1"
zeep = "^4.2.0"

[tool.poetry.group.dev.dependencies]
aiofiles = "^22.1.0"
black = {version = "^22.10.0", allow-prereleases = true}
openpyxl = "^3.0.10"
pytest = "^7.1.0"
pytest-asyncio = "^0.20.2"
pytest-console-scripts = "^1.3.1"
pytest-cov = "^3.0.0"
xlsxwriter = "^3.0.3"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry.scripts]
kingspan-export = "connectsensor._kingspan_export:main"
kingspan-notifier = "connectsensor._kingspan_notifier:main"
kingspan-status = "connectsensor._kingspan_status:main"

[tool.coverage.run]
branch = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pytest.ini_options]
addopts = "-W ignore::DeprecationWarning --cov=connectsensor"
minversion = 6.0
pythonpath = [".", "tests"]
testpaths = ["tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py39, py310, py311
[testenv]
allowlist_externals = poetry
commands_pre = poetry install --no-root --sync
commands = poetry run -vvv pytest --import-mode importlib
"""

# linter settings
[tool.pylama]
linters = "pylint,mccabe,pyflakes"
max_line_length = 100
skip = ".tox/*"

[tool.pylama.linter.pycodestyle]
format = "pylint"
ignore = "E203,E231,W503"

[tool.pylama.linter.mccabe]
max-complexity = 15

[tool.pylama.linter.pyflakes]
builtins = "_"
